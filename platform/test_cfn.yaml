AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a VPC with a public subnet and an EC2 instance with a public IP

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t2.small
      - t3.small
    ConstraintDescription: must be a valid EC2 instance type.
  LatestAmiId:
    Description: AMI for EC2 instance
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id

Resources:

#VPC CREATION

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Chapter 3 VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
  
 
  EC2Instance:
      Type: AWS::EC2::Instance
      Properties:
        ImageId: !Ref LatestAmiId
        InstanceType: !Ref InstanceType
        #KeyName: your-key-pair-name
        NetworkInterfaces:
          - AssociatePublicIpAddress: 'true'
            DeviceIndex: '0'
            GroupSet:
              - !Ref SecurityGroup
            SubnetId: !Ref PublicSubnet
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash
              sudo apt update
              sudo apt install -y python3 python3-pip python3-virtualenv nginx
              # git clone https://github.com/pmbsantos/ch3.git
              # TODOremove unused foders
              # cd to the backend folder
              # ?? for some reason python3-virtualenv was not installed
              # virtualenv .venv
              # source .venv/bin/activate
              # pip install -r requirements.txt
              # python3 -m uvicorn main:app
              # pip install gunicorn
              # sudo nano /etc/systemd/system/gunicorn.socket
              #sudo nano /etc/systemd/system/gunicorn.service
              # FOLDER NAME: /home/ubuntu/ch3/backend
              #sudo systemctl start gunicorn.socket
              #sudo systemctl enable gunicorn.socket
              # NGINX WAS NOT INSTALLED
              #sudo nginx -t
              #
                
Outputs:

  EC2InstancePublicDNS:
    Description: Public DNS of the EC2 instance
    Value: !GetAtt EC2Instance.PublicDnsName
    Export:
      Name: !Sub "${AWS::StackName}-EC2InstancePublicDNS"
 
